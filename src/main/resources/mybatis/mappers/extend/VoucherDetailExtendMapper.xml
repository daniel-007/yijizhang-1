<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.ahyc.yjz.mapper.extend.VoucherDetailExtendMapper">
  <resultMap id="BaseResultMap" type="cn.ahyc.yjz.model.VoucherDetail">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Sep 23 16:59:46 CST 2015.
    -->
    <constructor>
      <idArg column="id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="subject_code" javaType="java.lang.Long" jdbcType="BIGINT"/>
      <arg column="debit" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="credit" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="summary" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="voucher_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="modify_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>

  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Sep 23 16:59:46 CST 2015.
    -->
    id, subject_code, debit, credit, summary, voucher_id, create_time, modify_time
  </sql>
  <select id="selectProfitAndLoss" parameterType="java.util.Map" resultMap="BaseResultMap">
    SELECT a.id,a.subject_code,a.debit,a.credit,a.summary,a.voucher_id,a.create_time,a.modify_time FROM voucher_detail  a,voucher b,period c
	WHERE a.voucher_id=b.id
	AND   b.period_id=c.id
	AND   c.book_id=#{bookId,jdbcType=BIGINT}
	AND   c.current_period=#{currentPeriod,jdbcType=INTEGER}
	ORDER BY a.id ASC
  </select>

  <select id="selectDetailTotal" parameterType="java.util.Map" resultType="java.util.Map">
    SELECT
    	"合计：" as summary,
		<if test="isreversal != null">
		<![CDATA[
			CONVERT (
				CONCAT(
					IF (sum(t.debit) > 0, '-', ''),
					ABS(sum(t.debit)) * 100
				),
				DECIMAL
			) AS debit,
			CONVERT (
				CONCAT(
					IF (sum(t.credit) > 0, '-', ''),
					ABS(sum(t.credit)) * 100
				),
				DECIMAL
			) AS credit
		]]>
		</if>
		<if test="isreversal == null">
	    	CONVERT (sum(t.debit) * 100, DECIMAL) AS debit,
			CONVERT (sum(t.credit) * 100, DECIMAL) AS credit
		</if>
    from voucher_detail t
	WHERE
		t.voucher_id = #{voucherId,jdbcType=BIGINT}
  </select>

  <select id="selectDetailList" parameterType="java.util.Map" resultType="java.util.Map">
    SELECT
   		t.summary,
   		t.subject_code AS subjectCode,
		CONCAT(
			t.subject_code,
			' ',
			a.subject_name
		) AS subjectTextName,
		<if test="isreversal != null">
		<![CDATA[
			CONCAT(
					IF (t.debit > 0, '-', ''),
					ABS(t.debit)
				) as newdebit,
			CONCAT(
					IF (t.credit > 0, '-', ''),
					ABS(t.credit)
				) as newcrebit,
			IF(t.debit>0,'-','') as dpn,
			IF(t.credit>0,'-','') as crpn,
		]]>
		</if>
		<if test="isreversal == null">
		<![CDATA[
			t.debit as newdebit,
   			t.credit as newcrebit,
			IF(t.debit<0,'-','') as dpn,
			IF(t.credit<0,'-','') as crpn,
		]]>
		</if>
		NULLIF(SUBSTRING(LPAD(ABS(t.debit), 12, 'a'), 1, 1),'a') AS dHundredMillion,
		NULLIF(SUBSTRING(LPAD(ABS(t.debit), 12, 'a'), 2, 1),'a') AS dTenMillions,
		NULLIF(SUBSTRING(LPAD(ABS(t.debit), 12, 'a'), 3, 1),'a') AS dMillions,
		NULLIF(SUBSTRING(LPAD(ABS(t.debit), 12, 'a'), 4, 1),'a') AS dHundredThousand,
		NULLIF(SUBSTRING(LPAD(ABS(t.debit), 12, 'a'), 5, 1),'a') AS dTenThousand,
		NULLIF(SUBSTRING(LPAD(ABS(t.debit), 12, 'a'), 6, 1),'a') AS dThousand,
		NULLIF(SUBSTRING(LPAD(ABS(t.debit), 12, 'a'), 7, 1),'a') AS dHundred,
		NULLIF(SUBSTRING(LPAD(ABS(t.debit), 12, 'a'), 8, 1),'a') AS dTen,
		NULLIF(SUBSTRING(LPAD(ABS(t.debit), 12, 'a'), 9, 1),'a') AS dYuan,
		NULLIF(SUBSTRING(LPAD(ABS(t.debit), 12, 'a'), 11, 1),'a') AS dAngle,
		NULLIF(SUBSTRING(LPAD(ABS(t.debit), 12, 'a'), 12, 1),'a') AS dCent,
		NULLIF(SUBSTRING(LPAD(ABS(t.credit), 12, 'a'), 1, 1),'a') AS crHundredMillion,
		NULLIF(SUBSTRING(LPAD(ABS(t.credit), 12, 'a'), 2, 1),'a') AS crTenMillions,
		NULLIF(SUBSTRING(LPAD(ABS(t.credit), 12, 'a'), 3, 1),'a') AS crMillions,
		NULLIF(SUBSTRING(LPAD(ABS(t.credit), 12, 'a'), 4, 1),'a') AS crHundredThousand,
		NULLIF(SUBSTRING(LPAD(ABS(t.credit), 12, 'a'), 5, 1),'a') AS crTenThousand,
		NULLIF(SUBSTRING(LPAD(ABS(t.credit), 12, 'a'), 6, 1),'a') AS crThousand,
		NULLIF(SUBSTRING(LPAD(ABS(t.credit), 12, 'a'), 7, 1),'a') AS crHundred,
		NULLIF(SUBSTRING(LPAD(ABS(t.credit), 12, 'a'), 8, 1),'a') AS crTen,
		NULLIF(SUBSTRING(LPAD(ABS(t.credit), 12, 'a'), 9, 1),'a') AS crYuan,
		NULLIF(SUBSTRING(LPAD(ABS(t.credit), 12, 'a'), 11, 1),'a') AS crAngle,
		NULLIF(SUBSTRING(LPAD(ABS(t.credit), 12, 'a'), 12, 1),'a') AS crCent
    FROM voucher_detail t, account_subject a
	WHERE
		t.subject_code = a.subject_code
		AND a.book_id = #{bookId,jdbcType=BIGINT}
		AND t.voucher_id = #{voucherId,jdbcType=BIGINT}
	ORDER BY
		t.id ASC
  </select>

  <select id="selectVoucherDetailForSearch" resultType="java.util.Map" parameterType="java.lang.Long" >
    SELECT t1.id, CONCAT(t1.voucher_word, '-', t1.voucher_no, ' ', DATE_FORMAT(t1.voucher_time, '%Y/%m/%d')) AS voucher, t2.summary, t3.subject_code, t3.subject_name, t2.debit
        , t2.credit, t1.bill_num
    FROM period t, voucher t1, voucher_detail t2, account_subject t3
    WHERE t.id = #{periodId}
        AND t1.period_id = t.id
        AND t2.voucher_id = t1.id
        AND t3.book_id = t.book_id
        AND t3.subject_code = t2.subject_code
    ORDER BY t1.voucher_no
  </select>


  <select id="selectVoucherDetailForSearchByKeyWord" resultType="java.util.Map" parameterType="java.util.Map">

    SELECT *
    FROM (SELECT t1.id, CONCAT(t1.voucher_word, '-', t1.voucher_no, ' ', DATE_FORMAT(t1.voucher_time, '%Y/%m/%d')) AS voucher, t2.summary, t3.subject_code, t3.subject_name, t2.debit
            , t2.credit, t1.bill_num
        FROM period t, voucher t1, voucher_detail t2, account_subject t3
        WHERE t.id = #{periodId}
            AND t1.period_id = t.id
            AND t2.voucher_id = t1.id
            AND t3.book_id = t.book_id
            AND t3.subject_code = t2.subject_code
        ORDER BY t1.voucher_no
        )tt 
    WHERE tt.voucher LIKE #{keyword}
        OR tt.summary LIKE #{keyword}
        OR tt.subject_code LIKE #{keyword}
        OR tt.subject_name LIKE #{keyword}

  </select>
  <select id="searchDetail" resultType="java.util.Map" parameterType="java.util.Map">
  <![CDATA[
	SELECT 
	  IF (ISNULL(a.id), a.ctt, a.summary) AS summary,
	  LEFT (a.voucher_time, 10) AS voucherTime,
	  a.debit ,
	  a.credit ,
	  IF (ISNULL(a.id), '', a.subject_name) AS subjectName,
	  IF (ISNULL(a.id), '', a.voucherId) AS voucherId,
	  IF (ISNULL(a.id), '', a.voucherWord) AS voucherWord 
	FROM
	  (SELECT 
	    IF (
	      ISNULL(a.period_id),
	      '本年累计',
	      IF (
	        ISNULL(a.`voucher_time`),
	        '本期合计',
	        IFNULL(b.id, '本日合计')
	      )
	    ) AS ctt,
	    MAX(a.`voucher_time`) AS voucher_time,
	    b.subject_code,
	    b.id,
	    CONCAT(a.voucher_word, '-', a.voucher_no) AS voucherWord,
	    SUM(b.debit) AS debit,
	    SUM(b.credit) AS credit,
	    a.id AS voucherId,
	    c.summary,
	    d.subject_name 
	  FROM
	    `voucher` a,
	    voucher_detail b,
	     (SELECT 
	      a.voucher_id,
	      a.summary 
	    FROM
	      voucher_detail a 
	      LEFT JOIN voucher b 
	        ON a.voucher_id = b.id 
	      LEFT JOIN period c 
	        ON b.period_id = c.id 
	      LEFT JOIN account_subject d 
	        ON a.subject_code = d.subject_code 
	        AND c.book_id = d.book_id 
	    GROUP BY a.voucher_id 
	    ORDER BY a.id ASC) c,
	    (SELECT 
	      a.voucher_id,
	      a.summary,
	      d.subject_name 
	    FROM
	      voucher_detail a 
	      LEFT JOIN voucher b 
	        ON a.voucher_id = b.id 
	      LEFT JOIN period c 
	        ON b.period_id = c.id 
	      LEFT JOIN account_subject d 
	        ON a.subject_code = d.subject_code 
	        AND c.book_id = d.book_id 
	    WHERE a.`subject_code` not like #{subjectCode}
	    GROUP BY a.voucher_id) d 
	  WHERE b.`subject_code` like #{subjectCode}
	    AND a.`id` = b.`voucher_id` 
	    AND a.id = d.voucher_id 
	    AND a.id = c.voucher_id 
	    AND a.period_id IN 
	    (SELECT 
	      p.id 
	    FROM
	      period p 
	    WHERE p.current_period >= #{startPeriod,jdbcType=INTEGER}
	      AND p.current_period <= #{endPeriod,jdbcType=INTEGER}
	      AND p.book_id = #{bookId,jdbcType=BIGINT}) 
	  GROUP BY a.period_id,
	    a.`voucher_time`,
	    b.id WITH ROLLUP) a 
	]]>
  </select>
  <update id="resetVoucherNo" parameterType="java.lang.Long" >
    UPDATE voucher tt,
     (SELECT @rowNO := 0) t1
    SET tt.voucher_no = (SELECT @rowNO := @rowNo + 1)
    WHERE
        tt.period_id = #{periodId}
  </update>

  <update id="updateToNewSubjectCode" parameterType="java.util.Map" >
    UPDATE voucher_detail t, (SELECT t2.id
        FROM voucher t1, voucher_detail t2
        WHERE t1.id = t2.voucher_id
            AND t1.period_id = #{periodId}
            AND t2.subject_code = #{oldSubjectCode}
        ) t3
    SET t.subject_code = #{newSubjectCode}
    WHERE t.id = t3.id
  </update>

</mapper>