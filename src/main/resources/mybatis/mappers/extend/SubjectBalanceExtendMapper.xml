<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.ahyc.yjz.mapper.extend.SubjectBalanceExtendMapper" >
  <resultMap id="ResultMap" type="cn.ahyc.yjz.dto.SubjectBalanceDto" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Sep 29 15:13:58 CST 2015.
    -->
    <constructor >
      <idArg column="id" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="subject_code" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="initial_debit_balance" jdbcType="DECIMAL" javaType="java.math.BigDecimal" />
      <arg column="initial_credit_balance" jdbcType="DECIMAL" javaType="java.math.BigDecimal" />
      <arg column="period_debit_occur" jdbcType="DECIMAL" javaType="java.math.BigDecimal" />
      <arg column="period_credit_occur" jdbcType="DECIMAL" javaType="java.math.BigDecimal" />
      <arg column="year_debit_occur" jdbcType="DECIMAL" javaType="java.math.BigDecimal" />
      <arg column="year_credit_occur" jdbcType="DECIMAL" javaType="java.math.BigDecimal" />
      <arg column="terminal_debit_balance" jdbcType="DECIMAL" javaType="java.math.BigDecimal" />
      <arg column="terminal_credit_balance" jdbcType="DECIMAL" javaType="java.math.BigDecimal" />
      <arg column="book_id" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="period_id" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="direction" jdbcType="INTEGER" javaType="java.lang.Integer" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Sep 29 15:13:58 CST 2015.
    -->
    id, subject_code, initial_debit_balance, initial_credit_balance, period_debit_occur, 
    period_credit_occur, year_debit_occur, year_credit_occur, terminal_debit_balance, 
    terminal_credit_balance, book_id, period_id, direction
  </sql>
  <select id="selectProfitAndLoss" parameterType="java.util.Map" resultMap="ResultMap">
    SELECT a.id, a.subject_code, a.initial_debit_balance, a.initial_credit_balance, a.period_debit_occur, 
	    a.period_credit_occur, a.year_debit_occur, a.year_credit_occur, a.terminal_debit_balance, 
	    a.terminal_credit_balance, a.book_id, a.period_id, t.direction
	FROM
	  account_subject t,
	  subject_balance a 
	WHERE NOT EXISTS 
	  (SELECT 
	    * 
	  FROM
	    account_subject t1,
	    account_subject t2 
	  WHERE t1.subject_code = t2.parent_subject_code 
	    AND t.subject_code = t1.subject_code) 
	  AND t.subject_code = a.subject_code 
	  AND t.book_id = a.book_id 
	  AND a.book_id = #{bookId,jdbcType=BIGINT}
	  AND a.period_id = #{periodId,jdbcType=BIGINT}
	  AND t.subject_code LIKE #{startCode,jdbcType=VARCHAR}"%"
	  AND (a.terminal_credit_balance>0 OR a.terminal_debit_balance>0)
	  ORDER BY a.id
  </select>

  <insert id="insertOrUpdateSubjectSum" parameterType="java.lang.Long">
  <![CDATA[
		INSERT INTO subject_balance (
			subject_code,
			book_id,
			period_id,
			period_debit_occur,
			period_credit_occur,
			year_debit_occur,
			year_credit_occur
		) SELECT
			sb.subject_code,
			sb.book_id,
			sb.period_id,
			sb.debit,
			sb.credit,
			sby.ydebit,
			sby.ycredit
		FROM
			(
				SELECT
					t.subject_code,
					p.book_id,
					v.period_id,
					NULLIF(sum(t.debit), 0) AS debit,
					NULLIF(sum(t.credit), 0) AS credit
				FROM
					voucher_detail t,
					voucher v,
					period p
				WHERE
					t.voucher_id = v.id
				AND p.id = v.period_id
				AND v.period_id = #{periodId,jdbcType=BIGINT}
				GROUP BY
					t.subject_code,
					p.book_id,
					v.period_id
			) AS sb,
			(
				SELECT
					t.subject_code,
					p.book_id,
					#{periodId,jdbcType=BIGINT} AS period_id,
					NULLIF(sum(t.debit), 0) AS ydebit,
					NULLIF(sum(t.credit), 0) AS ycredit
				FROM
					voucher_detail t,
					voucher v,
					period p
				WHERE
					t.voucher_id = v.id
				AND p.id = v.period_id
				GROUP BY
					t.subject_code,
					p.book_id
			) AS sby
		WHERE
			sb.subject_code = sby.subject_code
		AND sb.book_id = sby.book_id
		AND sb.period_id = sby.period_id ON DUPLICATE KEY UPDATE period_debit_occur = sb.debit,
		 period_credit_occur = sb.credit,
		 year_debit_occur = sby.ydebit,
		 year_credit_occur = sby.ycredit
	]]>
  </insert>

  <insert id="insertOrUpdateSubjectBalance" parameterType="java.lang.Long">
  	<![CDATA[
		INSERT INTO subject_balance (
			subject_code,
			book_id,
			period_id,
			terminal_debit_balance,
			terminal_credit_balance,
			initial_debit_balance,
			initial_credit_balance
		) SELECT
				*
			FROM
			(
				SELECT
					t2.subject_code,
					t2.book_id,
					#{periodId,jdbcType=BIGINT} AS period_id,
					NULLIF(IF(t2.direction = 1,IFNULL(t2.initial_left, 0) + IFNULL(t.year_debit_occur, 0) - IFNULL(t.year_credit_occur, 0),NULL),0) AS t_debit_balance,
					NULLIF(IF(t2.direction = 2,IFNULL(t2.initial_left, 0) - IFNULL(t.year_debit_occur, 0) + IFNULL(t.year_credit_occur, 0),NULL),0) AS t_credit_balance,
					NULLIF(IF(t2.direction = 1,IFNULL(t2.initial_left, 0) + IFNULL(t.year_debit_occur, 0) - IFNULL(t.year_credit_occur, 0) - IFNULL(t.period_debit_occur, 0) + IFNULL(t.period_credit_occur, 0),NULL),0) AS i_debit_balance,
					NULLIF(IF(t2.direction = 2,IFNULL(t2.initial_left, 0) - IFNULL(t.year_debit_occur, 0) + IFNULL(t.year_credit_occur, 0) + IFNULL(t.period_debit_occur, 0) - IFNULL(t.period_credit_occur, 0),NULL),0) AS i_credit_balance
				FROM
					period p,
					account_subject t2
					LEFT JOIN subject_balance t ON t.subject_code = t2.subject_code AND t.book_id = t2.book_id AND t.period_id = #{periodId,jdbcType=BIGINT}
				WHERE
					p.id = #{periodId,jdbcType=BIGINT}
					AND p.book_id = t2.book_id
					AND (t2.initial_left IS NOT NULL or t.period_id is not null) 
			) AS sb 
		ON DUPLICATE KEY UPDATE terminal_debit_balance = sb.t_debit_balance,
			terminal_credit_balance = sb.t_credit_balance,
			initial_debit_balance = sb.i_debit_balance,
			initial_credit_balance = sb.i_credit_balance
	]]>
  </insert>
  
  <insert id="insertNextPeriodSubjectBalance" parameterType="java.util.Map">
		INSERT INTO subject_balance (
			subject_code,
			book_id,
			period_id,
			terminal_debit_balance,
			terminal_credit_balance,
			initial_debit_balance,
			initial_credit_balance
			<if test="isYearEnd == null">
				,year_debit_occur,
				year_credit_occur
			</if>
		) SELECT
			subject_code,
			#{bookId,jdbcType=BIGINT},
			#{newPeriodId,jdbcType=BIGINT},
			terminal_debit_balance,
			terminal_credit_balance,
			terminal_debit_balance,
			terminal_credit_balance
			<if test="isYearEnd == null">
				,year_debit_occur,
				year_credit_occur
			</if>
		FROM
			subject_balance
		WHERE
			period_id = #{periodId,jdbcType=BIGINT}
  </insert>
</mapper>